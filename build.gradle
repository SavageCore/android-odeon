/*
 * Copyright 2019 Thibault Seisel
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        // SDK and tools
        compileSdkVersion = 29
        minSdkVersion = 21
        targetSdkVersion = 28

        // App Version shared across modules
        appVersionCode = 200204
        appVersionName = '2.0.2'

        versions = [
                'kotlin'        : '1.3.61',
                'koroutines'    : '1.3.3',
                'androidx'      : [
                        'appcompat'        : '1.1.0',
                        'cardview'         : '1.0.0',
                        'constraint_layout': '1.1.3',
                        'core'             : '1.2.0',
                        'fragment'         : '1.2.2',
                        'lifecycle'        : '2.2.0',
                        'media'            : '1.1.0',
                        'navigation'       : '2.2.1',
                        'palette'          : '1.0.0',
                        'preference'       : '1.1.0',
                        'recyclerview'     : '1.1.0',
                        'rvSelection'      : '1.0.0',
                        'room'             : '2.2.4',
                        'viewpager2'       : '1.0.0',
                        'work'             : '2.3.2',
                        'test'             : '1.2.0',
                        'ext_junit'        : '1.1.1',
                        'ext_truth'        : '1.2.0',
                        'espresso'         : '3.2.0'
                ],
                'dagger'        : '2.26',
                'exoplayer'     : '2.9.6',
                'glide'         : '4.11.0',
                'kdenticon'     : '1.0.0-alpha5',
                'ktor'          : '1.3.0',
                'material'      : '1.1.0',
                'moshi'         : '1.9.2',
                'ratioimageview': '1.0.0',
                'timber'        : '4.7.1',

                'junit'         : '4.12',
                'kotlintest'    : '3.3.3',
                'mockito'       : '2.28.2',
                'mockk'         : '1.9.3',
                'robolectric'   : '4.3.1',
                'truth'         : '0.44'
        ]
    }

    repositories {
        if (project.hasProperty('repositoryMirrors')) {
            repositoryMirrors.split(',').each { mirror ->
                maven { url mirror }
            }
        } else {
            google()
            jcenter()
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:${versions.androidx.navigation}"
    }
}

allprojects {
    repositories {
        if (project.hasProperty('repositoryMirrors')) {
            repositoryMirrors.split(',').each { mirror ->
                maven { url mirror }
            }
        } else {
            google()
            jcenter()
        }
    }
}

subprojects {
    afterEvaluate {
        extensions.findByName('kapt')?.arguments {
            arg('dagger.formatGeneratedSource', 'disabled')
            arg('dagger.fastInit', 'enabled')
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * Retrieve a Gradle property value, or return the provided default value if it is not defined.
 *
 * @param propertyName The name of the property to find.
 * @param defaultValue The value to use when the requested property is not defined.
 * @return The value of the Gradle property.
 */
def <T> T propOrDefault(String propertyName, T defaultValue) {
    def propertyValue = project.properties[propertyName]
    return propertyValue ?: defaultValue
}

/**
 * Resolve the path of a file relatively to the root project.
 * This is meant to be used by sub-projects to reference a file from the root project.
 *
 * @param filename The path of the file whose path is to be resolved.
 * @return The path of the specified file.
 */
String rootProjectFile(String filename) {
    def file = project.file(filename)
    if (!file.exists()) {
        throw new FileNotFoundException("No such file: ${file.path}")
    }

    return file.path
}