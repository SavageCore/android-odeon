/*
 * Copyright 2020 Thibault Seisel
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            // Configure Kotlin compiler optimisations for releases
            kotlinOptions {
                freeCompilerArgs += [
                        '-Xno-param-assertions',
                        '-Xno-call-assertions',
                        '-Xno-receiver-assertions'
                ]
            }
        }
    }

    sourceSets {
        // Add Room schemas to test sources in order to test database migrations.
        androidTest.assets.srcDirs += files("$projectDir/schemas")
    }
}

kapt {
    arguments {
        arg('room.schemaLocation', "$projectDir/schemas".toString())
        arg('room.incremental', 'true')
    }
}

dependencies {
    // Shared Kotlin language features
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.koroutines}"

    // Shared AndroidX libraries
    api "androidx.core:core-ktx:${versions.androidx.core}"
    api "androidx.work:work-runtime-ktx:${versions.androidx.work}"

    // Timber Logging
    api "com.jakewharton.timber:timber:${versions.timber}"

    // Dagger - compiler is included to generate implementation factories.
    api "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    // Room Database
    api "androidx.room:room-ktx:${versions.androidx.room}"
    kapt "androidx.room:room-compiler:${versions.androidx.room}"

    // Provides the instance of SharedPreferences
    api "androidx.preference:preference-ktx:${versions.androidx.preference}"

    implementation "androidx.media:media:${versions.androidx.media}"

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}"
    testImplementation "io.kotlintest:kotlintest-assertions:${versions.kotlintest}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.koroutines}"
    testImplementation "io.mockk:mockk:${versions.mockk}"
    testImplementation "androidx.test.ext:junit-ktx:${versions.androidx.ext_junit}"
    testImplementation ("org.robolectric:robolectric:${versions.robolectric}") {
        exclude group: "com.google.auto.service", module: "auto-service"
    }

    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}"
    androidTestImplementation "androidx.test.ext:junit-ktx:${versions.androidx.ext_junit}"
    androidTestImplementation "com.google.truth:truth:${versions.truth}"
    androidTestImplementation "androidx.room:room-testing:${versions.androidx.room}"
}
