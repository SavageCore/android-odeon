/*
 * Copyright 2018 Thibault Seisel
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 27
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ['room.schemaLocation': "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                proguardFile 'proguard-rules.pro'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Kotlin language support
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    // Android support libraries
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:support-media-compat:$supportLibVersion"

    // Android Room
    api "android.arch.persistence.room:runtime:${roomVersion}"
    implementation "android.arch.persistence.room:rxjava2:${roomVersion}"
    kapt "android.arch.persistence.room:compiler:${roomVersion}"

    // ExoPlayer
    api "com.google.android.exoplayer:exoplayer-core:${exoplayerVersion}"
    api "com.google.android.exoplayer:extension-mediasession:${exoplayerVersion}"

    // Dagger
    implementation "com.google.dagger:dagger:${daggerVersion}"
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${daggerVersion}"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"

    // Glide
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    kapt "com.github.bumptech.glide:compiler:${glideVersion}"

    // Timber Logging
    implementation "com.jakewharton.timber:timber:${timberVersion}"

    // Other libraries
    //implementation "com.github.thibseisel:kdenticon-android:${kdenticonVersion}"

    // Test dependencies
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.robolectric:robolectric:${robolectricVersion}"
    testImplementation "com.google.truth:truth:${truthVersion}"

    // Android-specific test dependencies
    androidTestImplementation "com.android.support:support-annotations:${supportLibVersion}"
    androidTestImplementation "com.android.support.test:runner:$androidTestVersion"
    androidTestImplementation "org.mockito:mockito-android:${mockitoVersion}"
}
