/*
 * Copyright 2018 Thibault Seisel
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.appVersionCode
        versionName rootProject.appVersionName
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ['room.schemaLocation': "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode true
                obfuscate true
                optimizeCode true
                proguardFile 'proguard-rules.pro'
            }

            // Configure Kotlin compiler optimisations for releases
            kotlinOptions {
                freeCompilerArgs = [
                        '-Xno-param-assertions',
                        '-Xno-call-assertions',
                        '-Xno-receiver-assertions'
                ]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

kapt {
    arguments {
        arg('dagger.formatGeneratedSource', 'disabled')
        arg('dagger.fastInit', 'enabled')
    }
}

dependencies {
    // Kotlin language support
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.koroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.koroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$rootProject.koroutinesVersion"

    // Android support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibVersion"
    implementation "com.android.support:support-media-compat:$rootProject.supportLibVersion"

    // Android Room
    api "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.roomVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.roomVersion"

    // ExoPlayer
    api "com.google.android.exoplayer:exoplayer-core:$rootProject.exoplayerVersion"
    api "com.google.android.exoplayer:extension-mediasession:$rootProject.exoplayerVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Timber Logging
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Other libraries
    //implementation "com.github.thibseisel:kdenticon-android:$rootProject.kdenticonVersion"

    // Test dependencies
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.robolectric:robolectric:$rootProject.robolectricVersion"
    testImplementation "com.google.truth:truth:$rootProject.truthVersion"

    // Android-specific test dependencies
    androidTestImplementation "com.google.truth:truth:$rootProject.truthVersion"
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.androidTestVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
}
